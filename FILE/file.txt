#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char const *argv[])
{
    // 文件指针
    FILE *fp;
    // 检查命令行参数
    /* argc是命令行参数的个数，argv是一个字符串数组，存储了所有的命令行参数
    argv[0]是程序的名称，
    argv[1]是第一个参数，即要打开的文件名
    argv[i]表示第i-1个参数(i>2)
    如果没有提供文件名，则提示用户并退出程序*/
    if (argc < 2)
    {
        printf("请在文件名后指定要打开的文件名\n");
        return EXIT_FAILURE;
    }
    // 打印命令行参数,包括程序名称和文件名
    printf("命令行参数个数: %d\n", argc);
    for (int i = 0; i < argc; i++)
    {
        printf("argv[%d]: %s\n", i, argv[i]);
    }
    // 打开文件
    //  fp = fopen("file.txt", "r");
    fp = fopen(argv[1], "r");
    if (!fp)
    {
        printf("打开文件%s失败\n", argv[1]);
        return EXIT_FAILURE;
    }
    // 操作
    // fgetc 读一个字符 // 读完会将文件指针移动到下一个字符位置
    // fgets 读一个字符串
    // fread 读一个二进制数据块即读缓冲区

    // fgetc
    // char ch;
    // int count = 0;
    // int line = 1;
    // while ((ch = fgetc(fp)) != EOF) // EOF是文件结束符
    // {
    //     // putchar(ch);
    //     count++;
    //     if (ch == '\n')
    //     {
    //         line++;
    //     }
    // }
    // printf("这个文件有%d个字符\n", count);
    // printf("这个文件有%d行\n", line);

    // fgets
    int size = 100;
    char buf[100];
    int count = 0;
    while (fgets(buf, size, fp))
    {
        count++;
    }
    // 检查最后一行是否没有换行符
    if (count > 0 && buf[strlen(buf) - 1] != '\n')
    {
        count--;
    }
    printf("\n%d\n", count);

    // char buf[15];
    // fread(buf, 1, 10, fp);
    // printf("%s", buf);

    // 关闭文件
    fclose(fp);
    return EXIT_SUCCESS;
}